AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Clinnet-EMR Serverless Backend

Globals:
  Function:
    Timeout: 30
    Runtime: nodejs18.x
    MemorySize: 256
    Environment:
      Variables:
        PATIENTS_TABLE: !Ref PatientsTable
        USERS_TABLE: !Ref UsersTable
        SERVICES_TABLE: !Ref ServicesTable
        APPOINTMENTS_TABLE: !Ref AppointmentsTable
        DOCUMENTS_BUCKET: !Ref DocumentsBucket

Resources:
  # API Gateway
  ClinnetApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"

  # Cognito User Pool for Authentication
  ClinnetUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: ClinnetUserPool
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
      Schema:
        - Name: email
          AttributeDataType: String
          Mutable: true
          Required: true
        - Name: name
          AttributeDataType: String
          Mutable: true
        - Name: role
          AttributeDataType: String
          Mutable: true

  # Cognito User Pool Client
  ClinnetUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: clinnet-app
      UserPoolId: !Ref ClinnetUserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_SRP_AUTH

  # DynamoDB Tables
  PatientsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ClinnetPatients
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH

  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ClinnetUsers
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH

  ServicesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ClinnetServices
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH

  AppointmentsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ClinnetAppointments
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: patientId
          AttributeType: S
        - AttributeName: date
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: PatientAppointments
          KeySchema:
            - AttributeName: patientId
              KeyType: HASH
            - AttributeName: date
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  # S3 Bucket for Documents
  DocumentsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub clinnet-documents-${AWS::AccountId}-${AWS::Region}
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            AllowedOrigins:
              - '*'
            MaxAge: 3000

  # Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaDynamoDBPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*

  # Lambda Functions
  GetPatientsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/patients/get-patients.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ClinnetApi
            Path: /patients
            Method: get

  CreatePatientFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/patients/create-patient.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ClinnetApi
            Path: /patients
            Method: post

Outputs:
  ClinnetApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub https://${ClinnetApi}.execute-api.${AWS::Region}.amazonaws.com/prod/

  UserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref ClinnetUserPool

  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !Ref ClinnetUserPoolClient

  DocumentsBucketName:
    Description: S3 Bucket for storing documents
    Value: !Ref DocumentsBucket